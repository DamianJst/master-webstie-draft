/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Camera_animated.glb -o src/components/Camera.jsx -r public 
*/

import React, {useEffect} from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import { useThree, useFrame } from '@react-three/fiber';

export function Camera(props) {
  const group = React.useRef()
  const { nodes, materials, animations } = useGLTF('/models/Camera_animated.glb')
  const { actions } = useAnimations(animations, group)

  // useFrame(() => {
      // Always look at humanoid
      // camera.lookAt(0, 3.5, 0)
    // })

  
  useEffect(() => {
    // Log action names to confirm 
    console.log(actions) 
    const action = Object.values(actions)[0]
    // action?.reset().fadeIn(0.5).play()
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <PerspectiveCamera name="Camera" makeDefault={true} far={1000} near={0.01} fov={75} position={[-9.996, 4.5, -0.002]} rotation={[0, -Math.PI / 2, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/Camera_animated.glb')
